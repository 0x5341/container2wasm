name: Tests
on:
  push:
    branches:
      - main
  pull_request:

env:
  DOCKER_BUILDKIT: 1

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Build
    steps:
    - uses: actions/setup-go@v4
      with:
        go-version: '1.21.x'
    - uses: actions/checkout@v4
    - name: Build all
      run: |
        make
        ls -al ./out/c2w
        if ldd ./out/c2w ; then echo "must be static binary" ; exit 1 ; fi

  test:
    runs-on: ubuntu-22.04
    name: Test
    strategy:
      fail-fast: false
      matrix:
        target: ["TestWasmtime", "TestWamr", "TestWasmer", "TestWazero", "TestWasmedge"]
    steps:
    - uses: actions/checkout@v4
    - name: x86_64
      env:
        GO_TEST_FLAGS: -run ${{ matrix.target }}/.*arch=x86_64.*
      run: |
        make test
    - name: riscv64
      env:
        GO_TEST_FLAGS: -run ${{ matrix.target }}/.*arch=(riscv64|aarch64).*
      run: |
        make test

  # benchmark:
  #   runs-on: ubuntu-22.04
  #   name: Benchmark
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Benchmark
  #     run: |
  #       make benchmark

  linter:
    runs-on: ubuntu-22.04
    name: Linter
    steps:
    - uses: actions/checkout@v4
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.54
        args: --verbose

  project:
    name: Project Checks
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/setup-go@v4
      with:
        go-version: 1.21.x
    - uses: actions/checkout@v4
      with:
        fetch-depth: 100
    - name: "Check DCO sign"
      run: |
        go install github.com/vbatts/git-validation@v1.2.0
        git-validation -v -run DCO
